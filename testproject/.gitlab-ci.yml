default:
   image: docker:24.0.5
   services:
      - docker:24.0.5-dind
   # before_script:
   #   - docker info

variables:
   # When using dind service, you must instruct docker to talk with the
   # daemon started inside of the service. The daemon is available with
   # a network connection instead of the default /var/run/docker.sock socket.
   #
   # The 'docker' hostname is the alias of the service container as described at
   # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
   #
   # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
   # the variable must be set to tcp://localhost:2375 because of how the
   # Kubernetes executor connects services to the job container
   # DOCKER_HOST: tcp://localhost:2375
   #
   DOCKER_HOST: tcp://docker:2375
   #
   # This instructs Docker not to start over TLS.
   DOCKER_TLS_CERTDIR: ""
stages:
   - install
   - build
   - quality
   - update-issues-status
install:
   stage: install
   image: node:alpine
   script:
      - npm install
   artifacts:
      name: artifacts
      untracked: true
      expire_in: 30 mins
      paths:
         - .npm/
         - node_modules/
build:
   stage: build
   image: node:alpine
   script:
      - CI=false npm run build
   artifacts:
      paths:
         - dist
      expire_in: 30 mins
   dependencies:
      - install
test:unit:
   stage: quality
   image: node:alpine
   script:
      - npm run test
   dependencies:
      - install
   coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
   artifacts:
      paths:
         - test-results.xml
      reports:
         junit: test-results.xml
update-issues-status:
   stage: update-issues-status
   image: andreav/gitlab-issue-updater:1.0
   variables:
      JUNIT_FILE_PATH: "${CI_BUILDS_DIR}/test-results.xml"
   script:
      - npm run start --prefix /usr/src/app
   dependencies:
      - test:unit
